{"ast":null,"code":"var _jsxFileName = \"/Users/hiwottadesse/Desktop/dismis/src/components/SigninPage/SigninPage.tsx\";\nimport React from \"react\";\nimport \"../../App.css\";\nimport { pages } from '../../App';\nimport logo from \"../../assets/Logo.png\";\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nexport default class SigninPage extends React.Component {\n  //emailPasswordDB = [{email: \"a@aa.com\", password: \"password\"}, {email: \"b@bb.com\", password: \"password\"} ]; //rejected idea\n  //making 2 arrays of email-password pairs for pseudo authentication. Users who insert anything other than the email-password pairs listed here won't be navigated to the HomePage\n  constructor(props) {\n    super(props);\n    this.emailRef = void 0;\n    this.passwordRef = void 0;\n    this.emailDB = [\"v-alittl@microsoft.com\", \"v-sharme@microsoft.com\", \"v-jomens@microsoft.com\", \"v-rabmo@microsoft.com\", \"v-htades@microsoft.com\", \"dan.clay@microsoft.com\", \"daniel.walzenbach@microsoft.com\"];\n    this.pwdDB = [\"alittl\", \"sharme\", \"jomens\", \"rabmo\", \"htades\", \"dan\", \"daniel\"];\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      console.log(\"TEST\");\n\n      if (this.emailRef.current == null || this.passwordRef.current == null) {\n        alert('INTERNAL ERROR: missing reference!');\n        return;\n      } // One of the fields is empty? If one of the fields is empty, we stay on the page\n      // otherwise we go to the page HomePage\n\n\n      let email = this.emailRef.current.value;\n      let passwd = this.passwordRef.current.value; //let p = { email: email, password: passwd };\n\n      let index1 = this.emailDB.indexOf(email);\n      let index2 = this.pwdDB.indexOf(passwd); //console.log(\"Email\", email);\n      //console.log(\"Password\", passwd);\n\n      if (email == \"\" || passwd == \"\") {\n        console.log(\"Empty field \");\n        alert(\"Empty field\");\n      } else {\n        console.log(\"No empty fields\"); //test that the pair (email, passwd) is in the DB\n\n        let p = {\n          email: email,\n          password: passwd\n        }; //console.log(\"DB\", this.emailPasswordDB);\n\n        console.log(\"p\", p); //console.log(\"indexof\", this.emailPasswordDB.indexOf(p));\n\n        console.log(\"*****\");\n        let index1 = this.emailDB.indexOf(email);\n        console.log(\"index1\", index1);\n        let index2 = this.pwdDB.indexOf(passwd);\n        console.log(\"index2\", index2); //if (this.emailPasswordDB.indexOf(p) > -1){\n\n        if (index1 > -1 && index2 > -1 && index1 == index2) {\n          console.log(\"User in the DB\");\n          this.props.changePage(pages.HomePage);\n        } else {\n          alert(\"User is not recognized\");\n          console.log(\"User not recognized in the DB\");\n        }\n      } //    this.props.saveSignInfo(this.emailRef.current.value, this.passwordRef.current.value); //gives error because no Redux implementation now   \n\n    };\n\n    this.emailRef = React.createRef();\n    this.passwordRef = React.createRef();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }, \"About Us\"), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }, \"Contact\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      alt: \"Logo shows up\",\n      style: {\n        width: \"400px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }, \"Dismiss Misinformation with More Information!\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 29\n      }\n    }, \"Email \"), /*#__PURE__*/React.createElement(FormControl, {\n      type: \"email\",\n      placeholder: \"Email\",\n      ref: this.emailRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }\n    }, \"Password \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"password\",\n      placeholder: \"Password\",\n      ref: this.passwordRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicCheckbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"checkbox\",\n      label: \"Check me out\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }\n    }, \"Sign in\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/hiwottadesse/Desktop/dismis/src/components/SigninPage/SigninPage.tsx"],"names":["React","pages","logo","Form","FormControl","Button","SigninPage","Component","constructor","props","emailRef","passwordRef","emailDB","pwdDB","handleSubmit","event","preventDefault","console","log","current","alert","email","value","passwd","index1","indexOf","index2","p","password","changePage","HomePage","createRef","render","width"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../../App.css\";\nimport { pages } from '../../App'\nimport logo from \"../../assets/Logo.png\"\n\nimport Form from 'react-bootstrap/Form'\nimport FormControl from 'react-bootstrap/FormControl'\nimport Button from 'react-bootstrap/Button'\n\n\ninterface SigninPageProps {//Contructor like for the page, these two methods are provided by the App for AddItemsPage to use\n    changePage: (page: pages) => void;\n    //saveSignInfo: (e: string, p: string) => void; //no Redux; gives error now\n}\n\nexport default class SigninPage extends React.Component<SigninPageProps, any> {\n\n    emailRef: React.RefObject<HTMLInputElement>;\n    passwordRef: React.RefObject<HTMLInputElement>;\n\n    //emailPasswordDB = [{email: \"a@aa.com\", password: \"password\"}, {email: \"b@bb.com\", password: \"password\"} ]; //rejected idea\n\n    emailDB = [\"v-alittl@microsoft.com\", \"v-sharme@microsoft.com\", \"v-jomens@microsoft.com\", \"v-rabmo@microsoft.com\", \"v-htades@microsoft.com\", \"dan.clay@microsoft.com\", \"daniel.walzenbach@microsoft.com\"];\n    pwdDB = [\"alittl\", \"sharme\", \"jomens\", \"rabmo\", \"htades\", \"dan\", \"daniel\"]; //making 2 arrays of email-password pairs for pseudo authentication. Users who insert anything other than the email-password pairs listed here won't be navigated to the HomePage\n\n    constructor(props: any) {\n        super(props);\n        this.emailRef = React.createRef();\n        this.passwordRef = React.createRef();\n    }\n    render() {\n        return (\n            <div className=\"main\">\n                <div className=\"header\">\n                    <button>About Us</button>\n                    <button>Contact</button>\n                </div>\n                <div className=\"logo\">\n                    <img src={logo} alt=\"Logo shows up\" style={{ width: \"400px\" }}></img>\n                    <h1>Dismiss Misinformation with More Information!</h1>\n                </div>\n                <div className=\"form\">\n                    <Form onSubmit={this.handleSubmit}>\n                        <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Label>Email </Form.Label>\n                            <FormControl\n                                type=\"email\"\n                                placeholder=\"Email\"\n                                ref={this.emailRef} />\n                        </Form.Group>\n                        <Form.Group controlId=\"formBasicPassword\">\n                            <Form.Label>Password </Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                placeholder=\"Password\"\n                                ref={this.passwordRef} />\n                        </Form.Group>\n                        <Form.Group controlId=\"formBasicCheckbox\">\n                            <Form.Check type=\"checkbox\" label=\"Check me out\" />\n                        </Form.Group>\n                        <Button type=\"submit\" variant=\"primary\">Sign in</Button>\n                        {/* <Button onClick={(e) => this.props.changePage(pages.RatingPage)} variant=\"primary\" type=\"submit\">\n                            Submit\n                        </Button>  */}\n                    </Form>\n                </div>\n            </div>\n        )\n    };\n\n    private handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        console.log(\"TEST\");\n\n        if (this.emailRef.current == null || this.passwordRef.current == null) {\n            alert('INTERNAL ERROR: missing reference!');\n            return;\n        }\n        // One of the fields is empty? If one of the fields is empty, we stay on the page\n        // otherwise we go to the page HomePage\n\n        let email = this.emailRef.current.value;\n        let passwd = this.passwordRef.current.value;\n        //let p = { email: email, password: passwd };\n        let index1 = this.emailDB.indexOf(email);\n        let index2 = this.pwdDB.indexOf(passwd);\n\n        //console.log(\"Email\", email);\n        //console.log(\"Password\", passwd);\n\n        if (email == \"\" || passwd == \"\") {\n            console.log(\"Empty field \");\n            alert(\"Empty field\");\n        } else {\n            console.log(\"No empty fields\");\n            //test that the pair (email, passwd) is in the DB\n            let p = {email: email, password: passwd};\n            //console.log(\"DB\", this.emailPasswordDB);\n            console.log(\"p\", p);\n            //console.log(\"indexof\", this.emailPasswordDB.indexOf(p));\n            console.log(\"*****\");\n            let index1 = this.emailDB.indexOf(email);\n            console.log(\"index1\", index1);\n            let index2 = this.pwdDB.indexOf(passwd);\n            console.log(\"index2\", index2);\n            //if (this.emailPasswordDB.indexOf(p) > -1){\n            if (index1 > -1 && index2 > -1 && index1 == index2) {\n                console.log(\"User in the DB\");\n                this.props.changePage(pages.HomePage)\n            } else {\n                alert(\"User is not recognized\");\n                console.log(\"User not recognized in the DB\");\n            }\n\n        }\n        //    this.props.saveSignInfo(this.emailRef.current.value, this.passwordRef.current.value); //gives error because no Redux implementation now   \n\n    }\n\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}