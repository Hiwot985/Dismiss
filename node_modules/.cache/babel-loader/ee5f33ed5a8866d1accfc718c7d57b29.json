{"ast":null,"code":"var _jsxFileName = \"/Users/hiwottadesse/Desktop/dismis/src/components/HomePage/SearchBar.tsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./Homepage.css\";\nimport { pages } from \"../../App\";\nimport { createSearchAction } from \"../../redux/actions\"; //import { spawn } from \"child_process\";\n\nclass Search extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.searchitem = \"\";\n    this.state = {\n      query: \"\",\n      error: null\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n\n      if (this.state.query == \"\") {\n        alert(\"INTERNAL ERROR: missing reference!\");\n        return;\n      }\n\n      this.props.searchArticles(this.state.query); //console.log(this.state.query);\n\n      this.props.changePage(pages.ListviewPage);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, \"Welcome to DisMis !\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, \"Americans don't trust 65% of news from social media.\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }), \"Use the DisMis database to find rated articles and better yet, rate them yourselves.\")), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"text\",\n      type: \"text\",\n      placeholder: \"Search\",\n      onChange: e => {\n        this.setState({\n          query: e.target.value.toUpperCase()\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, \"Search\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, \"OR\"));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {// error: state.error,\n  };\n}\n\nconst mapDispatchToProps = dispatch => ({\n  searchArticles: query => dispatch(createSearchAction(query))\n}); // connect is a HOC and it returns a function that you then pass your component to\n// what this does is\n// places the redux state as props to your component (mapStateToProps)\n// places the dispatch actions (functions) onto your component props\n// this allows us to call these functions inside your component ro change the redux state via reducers\n\n\nlet connectedComponent = connect(mapStateToProps, mapDispatchToProps)(Search); //this.props.searchArticles(this.state.query)\n\nexport default connectedComponent;","map":{"version":3,"sources":["/Users/hiwottadesse/Desktop/dismis/src/components/HomePage/SearchBar.tsx"],"names":["React","connect","pages","createSearchAction","Search","Component","searchitem","state","query","error","handleSubmit","event","preventDefault","alert","props","searchArticles","changePage","ListviewPage","render","e","setState","target","value","toUpperCase","mapStateToProps","mapDispatchToProps","dispatch","connectedComponent"],"mappings":";AAAA,OAAOA,KAAP,MAAiC,OAAjC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,gBAAP;AACA,SAASC,KAAT,QAAsB,WAAtB;AACA,SAA2BC,kBAA3B,QAAqD,qBAArD,C,CACA;;AAgBA,MAAMC,MAAN,SAAqBJ,KAAK,CAACK,SAA3B,CAAuD;AAAA;AAAA;AAAA,SACrDC,UADqD,GAChC,EADgC;AAAA,SAErDC,KAFqD,GAE7C;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,KAAK,EAAE;AAFD,KAF6C;;AAAA,SAqC7CC,YArC6C,GAqC7BC,KAAD,IAA6C;AAClEA,MAAAA,KAAK,CAACC,cAAN;;AACA,UAAI,KAAKL,KAAL,CAAWC,KAAX,IAAoB,EAAxB,EAA4B;AAC1BK,QAAAA,KAAK,CAAC,oCAAD,CAAL;AACA;AACD;;AACD,WAAKC,KAAL,CAAWC,cAAX,CAA0B,KAAKR,KAAL,CAAWC,KAArC,EANkE,CAOlE;;AAEA,WAAKM,KAAL,CAAWE,UAAX,CAAsBd,KAAK,CAACe,YAA5B;AACD,KA/CoD;AAAA;;AAMrDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAM,MAAA,QAAQ,EAAE,KAAKR,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,yFADF,CAFF,eAUE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,WAAW,EAAC,QAHd;AAIE,MAAA,QAAQ,EAAGS,CAAD,IAAO;AACf,aAAKC,QAAL,CAAc;AAAEZ,UAAAA,KAAK,EAAEW,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeC,WAAf;AAAT,SAAd;AACD,OANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,eAoBE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBF,eAwBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBF,CADF;AA4BD;;AAnCoD;;AAkDvD,SAASC,eAAT,CAAyBjB,KAAzB,EAAwC;AACtC,SAAO,CACL;AADK,GAAP;AAGD;;AAED,MAAMkB,kBAAkB,GAAIC,QAAD,KAA+B;AACxDX,EAAAA,cAAc,EAAGP,KAAD,IAAmBkB,QAAQ,CAACvB,kBAAkB,CAACK,KAAD,CAAnB;AADa,CAA/B,CAA3B,C,CAIA;AACA;AACA;AACA;AACA;;;AACA,IAAImB,kBAAkB,GAAG1B,OAAO,CAACuB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CrB,MAA7C,CAAzB,C,CACA;;AAEA,eAAeuB,kBAAf","sourcesContent":["import React, { Component } from \"react\";\nimport * as Redux from \"redux\";\nimport { connect } from \"react-redux\";\nimport \"./Homepage.css\";\nimport { pages } from \"../../App\";\nimport { actionIdentifier, createSearchAction } from \"../../redux/actions\";\n//import { spawn } from \"child_process\";\n\ninterface SearchProps {\n  //Contructor like for the page, these two methods are provided by the App for AddItemsPage to use\n  changePage: (page: pages) => void;\n  searchArticles: (query: string) => void;\n}\n\ninterface StateProps {\n  propFromReduxStore: string;\n}\n\ninterface DispatchProps {\n  createSearchAction: () => void;\n}\n\nclass Search extends React.Component<SearchProps, any> {\n  searchitem: string = \"\";\n  state = {\n    query: \"\",\n    error: null,\n  };\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <h1>Welcome to DisMis !</h1>\n        <h2>\n          <i>\n            Americans don't trust 65% of news from social media.\n            <br />\n            Use the DisMis database to find rated articles and better yet, rate\n            them yourselves.\n          </i>\n        </h2>\n        <input\n          name=\"text\"\n          type=\"text\"\n          placeholder=\"Search\"\n          onChange={(e) => {\n            this.setState({ query: e.target.value.toUpperCase() });\n          }}\n        />\n        {/* {this.props.error ? <span>{this.props.error}</span> : \"No results found\"} */}\n\n        <button type=\"submit\">Search</button>\n        {/* <button\n          onClick={(e) => this.props.changePage(pages.ListviewPage)}\n        ></button> */}\n        <p>OR</p>\n      </form>\n    );\n  }\n\n  private handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (this.state.query == \"\") {\n      alert(\"INTERNAL ERROR: missing reference!\");\n      return;\n    }\n    this.props.searchArticles(this.state.query);\n    //console.log(this.state.query);\n\n    this.props.changePage(pages.ListviewPage);\n  };\n}\n\nfunction mapStateToProps(state: Object) {\n  return {\n    // error: state.error,\n  };\n}\n\nconst mapDispatchToProps = (dispatch: Redux.Dispatch) => ({\n  searchArticles: (query: string) => dispatch(createSearchAction(query)),\n});\n\n// connect is a HOC and it returns a function that you then pass your component to\n// what this does is\n// places the redux state as props to your component (mapStateToProps)\n// places the dispatch actions (functions) onto your component props\n// this allows us to call these functions inside your component ro change the redux state via reducers\nlet connectedComponent = connect(mapStateToProps, mapDispatchToProps)(Search);\n//this.props.searchArticles(this.state.query)\n\nexport default connectedComponent;\n"]},"metadata":{},"sourceType":"module"}